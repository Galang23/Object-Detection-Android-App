# .github/workflows/android-ci.yml
# This workflow name will appear in the "Actions" tab of your GitHub repository.
name: Android CI

# This section defines when the workflow will run.
on:
  # Triggers the workflow on push events, but only for the "main" branch.
  push:
    branches: [ "main" ]
  # Triggers the workflow on pull request events that target the "main" branch.
  pull_request:
    branches: [ "main" ]

# A workflow is made up of one or more jobs that can run in parallel or sequence.
jobs:
  # This workflow has a single job called "build".
  build:
    # The job will run on the latest version of an Ubuntu virtual machine.
    runs-on: ubuntu-latest

    # These are the sequential steps that make up the "build" job.
    steps:
      # Step 1: Checks out your repository's code so the job can access it.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Sets up the Java Development Kit (JDK).
      # Android builds depend on Java. Version 17 is set here, which is common
      # for modern Android development. It also caches Gradle dependencies to
      # speed up future builds.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # Step 3: Makes the Gradle Wrapper script executable.
      # This permission is required to run Gradle commands on Linux-based runners.
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Step 4: Builds the project using the Gradle Wrapper.
      # This command compiles the app and runs any unit tests. If this step
      # fails, the entire workflow run will fail, alerting you to an issue.
      - name: Build with Gradle
        run: ./gradlew build
